/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MetaToken, MetaTokenInterface } from "../../contracts/MetaToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f4d657461546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d4554410000000000000000000000000000000000000000000000000000000081525081600390816200008f9190620003fd565b508060049081620000a19190620003fd565b505050620000b4620000ba60201b60201c565b620005c8565b600560019054906101000a900460ff16156200010d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000104906200056b565b60405180910390fd5b60ff8016600560009054906101000a900460ff1660ff1614620001815760ff600560006101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620001789190620005ab565b60405180910390a15b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200020557607f821691505b6020821081036200021b576200021a620001bd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000246565b62000291868362000246565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002de620002d8620002d284620002a9565b620002b3565b620002a9565b9050919050565b6000819050919050565b620002fa83620002bd565b620003126200030982620002e5565b84845462000253565b825550505050565b600090565b620003296200031a565b62000336818484620002ef565b505050565b5b818110156200035e57620003526000826200031f565b6001810190506200033c565b5050565b601f821115620003ad57620003778162000221565b620003828462000236565b8101602085101562000392578190505b620003aa620003a18562000236565b8301826200033b565b50505b505050565b600082821c905092915050565b6000620003d260001984600802620003b2565b1980831691505092915050565b6000620003ed8383620003bf565b9150826002028217905092915050565b620004088262000183565b67ffffffffffffffff8111156200042457620004236200018e565b5b620004308254620001ec565b6200043d82828562000362565b600060209050601f83116001811462000475576000841562000460578287015190505b6200046c8582620003df565b865550620004dc565b601f198416620004858662000221565b60005b82811015620004af5784890151825560018201915060208501945060208101905062000488565b86831015620004cf5784890151620004cb601f891682620003bf565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b600062000553602783620004e4565b91506200056082620004f5565b604082019050919050565b60006020820190508181036000830152620005868162000544565b9050919050565b600060ff82169050919050565b620005a5816200058d565b82525050565b6000602082019050620005c260008301846200059a565b92915050565b61188380620005d86000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063dd62ed3e14610251578063fe4b84df14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610e15565b60405180910390f35b6100f160048036038101906100ec9190610ed0565b61032f565b6040516100fe9190610f2b565b60405180910390f35b61010f610352565b60405161011c9190610f55565b60405180910390f35b61013f600480360381019061013a9190610f70565b61035c565b60405161014c9190610f2b565b60405180910390f35b61015d61038b565b60405161016a9190610fdf565b60405180910390f35b61018d60048036038101906101889190610ed0565b610394565b60405161019a9190610f2b565b60405180910390f35b6101bd60048036038101906101b89190610ffa565b6103cb565b6040516101ca9190610f55565b60405180910390f35b6101db610413565b6040516101e89190610e15565b60405180910390f35b61020b60048036038101906102069190610ed0565b6104a5565b6040516102189190610f2b565b60405180910390f35b61023b60048036038101906102369190610ed0565b61051c565b6040516102489190610f2b565b60405180910390f35b61026b60048036038101906102669190611027565b61053f565b6040516102789190610f55565b60405180910390f35b61029b60048036038101906102969190611067565b6105c6565b005b6060600380546102ac906110c3565b80601f01602080910402602001604051908101604052809291908181526020018280546102d8906110c3565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a61072f565b9050610347818585610737565b600191505092915050565b6000600254905090565b60008061036761072f565b9050610374858285610900565b61037f85858561098c565b60019150509392505050565b60006012905090565b60008061039f61072f565b90506103c08185856103b1858961053f565b6103bb9190611123565b610737565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610422906110c3565b80601f016020809104026020016040519081016040528092919081815260200182805461044e906110c3565b801561049b5780601f106104705761010080835404028352916020019161049b565b820191906000526020600020905b81548152906001019060200180831161047e57829003601f168201915b5050505050905090565b6000806104b061072f565b905060006104be828661053f565b905083811015610503576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fa906111c9565b60405180910390fd5b6105108286868403610737565b60019250505092915050565b60008061052761072f565b905061053481858561098c565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600560019054906101000a900460ff161590508080156105fa57506001600560009054906101000a900460ff1660ff16105b80610629575061060930610c02565b15801561062857506001600560009054906101000a900460ff1660ff16145b5b610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f9061125b565b60405180910390fd5b6001600560006101000a81548160ff021916908360ff16021790555080156106a6576001600560016101000a81548160ff0219169083151502179055505b6106d1306106b261038b565b60ff16600a6106c191906113ae565b846106cc91906113f9565b610c25565b801561072b576000600560016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516107229190611480565b60405180910390a15b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079d9061150d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080c9061159f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108f39190610f55565b60405180910390a3505050565b600061090c848461053f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109865781811015610978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096f9061160b565b60405180910390fd5b6109858484848403610737565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f29061169d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a619061172f565b60405180910390fd5b610a75838383610d7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af2906117c1565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610be99190610f55565b60405180910390a3610bfc848484610d80565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8b9061182d565b60405180910390fd5b610ca060008383610d7b565b8060026000828254610cb29190611123565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d639190610f55565b60405180910390a3610d7760008383610d80565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dbf578082015181840152602081019050610da4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610de782610d85565b610df18185610d90565b9350610e01818560208601610da1565b610e0a81610dcb565b840191505092915050565b60006020820190508181036000830152610e2f8184610ddc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6782610e3c565b9050919050565b610e7781610e5c565b8114610e8257600080fd5b50565b600081359050610e9481610e6e565b92915050565b6000819050919050565b610ead81610e9a565b8114610eb857600080fd5b50565b600081359050610eca81610ea4565b92915050565b60008060408385031215610ee757610ee6610e37565b5b6000610ef585828601610e85565b9250506020610f0685828601610ebb565b9150509250929050565b60008115159050919050565b610f2581610f10565b82525050565b6000602082019050610f406000830184610f1c565b92915050565b610f4f81610e9a565b82525050565b6000602082019050610f6a6000830184610f46565b92915050565b600080600060608486031215610f8957610f88610e37565b5b6000610f9786828701610e85565b9350506020610fa886828701610e85565b9250506040610fb986828701610ebb565b9150509250925092565b600060ff82169050919050565b610fd981610fc3565b82525050565b6000602082019050610ff46000830184610fd0565b92915050565b6000602082840312156110105761100f610e37565b5b600061101e84828501610e85565b91505092915050565b6000806040838503121561103e5761103d610e37565b5b600061104c85828601610e85565b925050602061105d85828601610e85565b9150509250929050565b60006020828403121561107d5761107c610e37565b5b600061108b84828501610ebb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110db57607f821691505b6020821081036110ee576110ed611094565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061112e82610e9a565b915061113983610e9a565b9250828201905080821115611151576111506110f4565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006111b3602583610d90565b91506111be82611157565b604082019050919050565b600060208201905081810360008301526111e2816111a6565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611245602e83610d90565b9150611250826111e9565b604082019050919050565b6000602082019050818103600083015261127481611238565b9050919050565b60008160011c9050919050565b6000808291508390505b60018511156112d2578086048111156112ae576112ad6110f4565b5b60018516156112bd5780820291505b80810290506112cb8561127b565b9450611292565b94509492505050565b6000826112eb57600190506113a7565b816112f957600090506113a7565b816001811461130f576002811461131957611348565b60019150506113a7565b60ff84111561132b5761132a6110f4565b5b8360020a915084821115611342576113416110f4565b5b506113a7565b5060208310610133831016604e8410600b841016171561137d5782820a905083811115611378576113776110f4565b5b6113a7565b61138a8484846001611288565b925090508184048111156113a1576113a06110f4565b5b81810290505b9392505050565b60006113b982610e9a565b91506113c483610e9a565b92506113f17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846112db565b905092915050565b600061140482610e9a565b915061140f83610e9a565b925082820261141d81610e9a565b91508282048414831517611434576114336110f4565b5b5092915050565b6000819050919050565b6000819050919050565b600061146a6114656114608461143b565b611445565b610fc3565b9050919050565b61147a8161144f565b82525050565b60006020820190506114956000830184611471565b92915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006114f7602483610d90565b91506115028261149b565b604082019050919050565b60006020820190508181036000830152611526816114ea565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611589602283610d90565b91506115948261152d565b604082019050919050565b600060208201905081810360008301526115b88161157c565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006115f5601d83610d90565b9150611600826115bf565b602082019050919050565b60006020820190508181036000830152611624816115e8565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611687602583610d90565b91506116928261162b565b604082019050919050565b600060208201905081810360008301526116b68161167a565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611719602383610d90565b9150611724826116bd565b604082019050919050565b600060208201905081810360008301526117488161170c565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006117ab602683610d90565b91506117b68261174f565b604082019050919050565b600060208201905081810360008301526117da8161179e565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611817601f83610d90565b9150611822826117e1565b602082019050919050565b600060208201905081810360008301526118468161180a565b905091905056fea264697066735822122000431073b851bde3731afac8c4bb223e702b3112087a9abf10178dd95a7c66e764736f6c63430008120033";

type MetaTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaToken__factory extends ContractFactory {
  constructor(...args: MetaTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MetaToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MetaToken__factory {
    return super.connect(runner) as MetaToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaTokenInterface {
    return new Interface(_abi) as MetaTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MetaToken {
    return new Contract(address, _abi, runner) as unknown as MetaToken;
  }
}
